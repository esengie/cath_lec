lam(app(x, y), x.lam(b, y)) => ...
lam(x, x.lam(app(x, y), v.y)) => ...


nf (lam a b) = case (nf a, nf $ fromScope b)  of
  (App(x,y), Lam(b, y)) -> ... -- 1st
  (_ , Lam(b, c)) -> case (nf b, nf $ fromScope c) of - 2nd
    .... ->

1) Сортируем начиная с левого аргумента (переменная < функсим < метаперем)
2) делаем case по всему уровню поддерева терма, тк не можем вернуться на уровень выше иначе
  (если правило вида app(f(...), g(...)) и имеем f но нет g надо смотреть на другое правило)
3) Не получается сделать case v of Lam(Lam(Lam...)) в виду того что надо делать fromScope и nf
